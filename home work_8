use [SQL221];
go

/* Задача 1. Напишите запрос, который вернет наименование должности с наибольшим количеством символов.
Учитывайте вероятность того, что сразу несколько должностей могут иметь одно и то же кол-во символов.
Вывести список уникальных наименований должностей (без дублирующих строк)
- Используется таблица [HumanResources].[Employee]
- Задействуйте строковые функции: len
- Результирующий набор данных содержит: Наименование должности, кол-во символов
- Описание таблицы можно видеть по ссылке
  https://dataedo.com/samples/html/AdventureWorks/doc/AdventureWorks_2/modules/Human_Resources_9/tables/HumanResources_Employee_130.html
*/

select e.*
from [HumanResources].[Employee] as e
go

select distinct
       top 1
       with ties
       e.JobTitle,
	   len(e.JobTitle)
  from [HumanResources].[Employee] as e
 order by len(e.JobTitle) desc;
go

/* Задача 2. Напишите запрос, который вернет код продукта (первые лат. Буквы до дефиса атрибута t1.ProductNumber 
Кол-во букв до дефиса может меняться от строки к строке. Необходимо определить позицию дефиса с помощью функции charindex) 
с наибольшим количеством продуктов. Учитывайте вероятность того, что сразу несколько кодов продуктов могу иметь одно 
и тоже кол-во продуктов. Не учитывайте продукты цвета Multi.
- Используется таблица [Production].[Product]
- Задействуйте строковые функции: charindex, substring
- Задействуйте агрегатную функцию count
- Результирующий набор данных содержит: код продукта, кол-во продуктов
- Описание таблицы можно видеть по ссылке
  https://dataedo.com/samples/html/AdventureWorks/doc/AdventureWorks_2/modules/Products_10/tables/Production_Product_153.html
*/

select p.*
from [Production].[Product] as p
go

select top 1
       with ties
       "Cod_pr"=substring(p.ProductNumber, 1, charindex('-', p.ProductNumber)-1),
       "Qty_pr"=count(p.ProductID)
	from [Production].[Product] as p
 where p.Color != N'Multi' 
 group by substring(p.ProductNumber, 1, charindex('-', p.ProductNumber)-1)
 order by "Qty_pr" desc;

/* Задача 3. Напишите запрос возвращающий список карт, номера которых начинаются с комбинаций чисел: 1111,
3333, 4444, 5555, 7777. 
Результирующий набор данных содержит: идент. кредит карты, наименование типа карты (в верхнем регистре),
номер карты (6 цифр начиная с 5 цифры заменено на * ), срок действия карты в формате YYYYMM 
(задействуйте функцию format https://docs.microsoft.com/ru-ru/dotnet/standard/base-types/custom-numeric-format-strings)
 - Используется таблица [Sales].[CreditCard]
 - Задействуйте строковые функции: right, upper, stuff, concat, format
 - Задействуйте предикат принадлежности множеству - in 
 - Отсортировать рез. набор данных по сроку действия карты (по убыванию)
 - Ссылки на описание таблицы и документацию функций
	https://dataedo.com/samples/html/AdventureWorks/doc/AdventureWorks_2/modules/Sales_12/tables/Sales_CreditCard_179.html
    https://docs.microsoft.com/ru-ru/sql/t-sql/functions/string-functions-transact-sql?view=sql-server-ver15
	https://docs.microsoft.com/ru-ru/dotnet/standard/base-types/custom-numeric-format-strings
  */
  
select с.*
from [Sales].[CreditCard] as с
go

select с.CreditCardID,
       upper(с.CardType) ,
	   stuff(с.CardNumber, 5, 6, '******') ,	
	   concat(expYear, format(ExpMonth, '00')) 
  from [Sales].[CreditCard] as с
 where right(с.CardNumber, 4) in ('1111','3333', '4444', '5555', '7777')
 order by с.expYear desc, с.ExpMonth desc;
go

/* Задача 4*. Напишите запрос, который вернет адрес электронной почты с наибольшим
количеством символов до знака @. Учитывайте вероятность того, что сразу несколько
адресов могут иметь одно и тоже кол-во символов. Не учитывайте адреса, которые начинаются с j, s (без учета регистра).
- Используется таблица [Person].[EmailAddress]
- Результирующий набор данных содержит: 
адрес электронной почты,
индекс символа @, 
символы до знака @, 
кол-во символов до знака @
*/

select p.*
from [Person].[EmailAddress] as p
go

select top 1
       with ties
       e.EmailAddress,
       charindex(N'@', e.EmailAddress),
	   substring(e.EmailAddress, 1, charindex(N'@', e.EmailAddress)-1) ,
	   len(substring(e.EmailAddress, 1, charindex(N'@', e.EmailAddress)-1))
  from [Person].[EmailAddress] e
 order by len(substring(e.EmailAddress, 1, charindex('@', e.EmailAddress)-1)) desc;
